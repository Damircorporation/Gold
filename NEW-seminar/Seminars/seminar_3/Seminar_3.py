# Задание №1
# Вручную создайте список с целыми числами, которые повторяются. Получите новый список, который содержит
# уникальные (без повтора) элементы исходного списка.
# *Подготовьте два решения, короткое и длинное, которое не использует другие коллекции помимо списков.

# data = [42, 73, 5, 42, 42, 2, 3, 7, 73, 42]
# data_new = list(set(data)) #сначала преобразуем во множество потом это множество в список
# print(sorted(data_new))
# data.sort()
# print(data)
# data_new = []
# for item in data:
#     if item not in data_new:
#         data_new.append(item)
# print(sorted(data_new))
# data.sort()
# print(data)

# Задание №2
# Пользователь вводит данные. Сделайте проверку данных и преобразуйте если возможно в один из вариантов ниже:
# ✔ Целое положительное число
# ✔ Вещественное положительное или отрицательное число
# ✔ Строку в нижнем регистре, если в строке есть хотя бы одна заглавная буква
# ✔ Строку в нижнем регистре в остальных случаях

# data = input('Введите строку:')
# if data.isdigit():
#     result = int(data)
# elif data.replace('.', '', 1).replace('-','',1).isdigit() and '-' not in data[1:]:
#     result = float(data)
# elif not data.islower():
#     result = data.lower()
# else:
#    result = data.upper()
# print(result)


# Задание №3
# Создайте вручную кортеж содержащий элементы разных типов. Получите из него словарь списков, где:
# ключ — тип элемента, значение — список элементов данного типа.

# data = (42, 73, 3.14, 'Hello world', None, True, 'Text', 100500.2, False)
# my_dict = dict()
# for item in data:
#     type_item = type(item)
#     if type_item not in my_dict:
#         my_dict[type_item] = [item]
#     else:
#         my_dict[type_item].append(item)


# Задание №4
# Создайте вручную список с повторяющимися элементами.
# Удалите из него все элементы, которые встречаются дважды.

# data = [42, 73, 5, 42, 42, 2, 3, 5, 7, 73, 42]
# COUNT = 2
# for item in set(data):
#     if data.count(item) == 2:
#         for _ in range (COUNT):
#             data.remove(item)
# print(*data)


# Задание №5
# Создайте вручную список с повторяющимися целыми числами.
# Сформируйте список с порядковыми номерами нечётных элементов исходного списка.
# Нумерация начинается с единицы.

# data = [42, 73, 5, 42, 42, 2, 3, 5, 7, 73, 42]
# result = []
# for i, value in enumerate (data, start=1):
#     if value % 2 == 1:
#         result.append(i)
#     print(result)


# Задание №6
# Пользователь вводит строку текста. Вывести каждое слово с новой строки.
# Строки нумеруются начиная с единицы.
# Слова выводятся отсортированными согласно кодировки Unicode.
# Текст выравнивается по правому краю так, чтобы у самого длинного слова был один пробел между ним и номером строки.

# whod = input('Введите текст: ')
# arr_whod = sorted(whod.split())  #разбиваем наш сплошной текст на отдельные слова и сортируем их
# max_len = 0  #максимальная длина строки
# for word in arr_whod:
#     current_len = len(word)  #текущая длина строки
#     if current_len > max_len:
#         max_len = current_len
# for i, word in enumerate(arr_whod, start=1): #нумеруем строки с первой цифры
#     print(f'{i}. {word: >{max_len}}')


# Задание №7
# Пользователь вводит строку текста.
# Подсчитайте сколько раз встречается каждая буква в строке без использования метода count и с ним.
# Результат сохраните в словаре, где ключ — символ, а значение — частота встречи символа в строке.
# Обратите внимание на порядок ключей. Объясните почему они совпадают или не совпадают в ваших решениях.

# text = input('Введите текст: ')
# my_dict = {}
# for item in text:
#     my_dict[item] = text.count(item)
# print(my_dict)


# Задание №8
# Три друга взяли вещи в поход. Сформируйте словарь, где ключ — имя друга, а значение —
# кортеж вещей. Ответьте на вопросы:
# ✔ Какие вещи взяли все три друга
# ✔ Какие вещи уникальны, есть только у одного друга
# ✔ Какие вещи есть у всех друзей кроме одного и имя того, у кого данная вещь отсутствует
# ✔ Для решения используйте операции с множествами. Код должен расширяться на любое большее количество друзей.

# friends_items = {
#     "Алекс": ("спички", "палатка", "рюкзак", "спальный мешок", "фонарик"),
#     "Борис": ("рюкзак", "спальный мешок", "еда", "фонарик"),
#     "Владимир": ("спички", "рюкзак", "спальный мешок", "еда", "котелок")
# }





