# Задание №1
# ✔ Пользователь вводит строку из четырёх
# или более целых чисел, разделённых символом “/”.
# Сформируйте словарь, где:
# ✔второе и третье число являются ключами.
# ✔первое число является значением для первого ключа.
# ✔четвертое и все возможные последующие числа
#  хранятся в кортеже как значения второго ключа.

# new_string = "1/5/26/18/5/14/3/9"
#
# value_1, key_1, key_2, *value_2 = map(int, new_string.split("/"))
# print({key_1: value_1, key_2 : tuple(value_2)})


# Задание №2
# ✔ Самостоятельно сохраните в переменной строку текста.
# ✔ Создайте из строки словарь, где ключ — буква, а значение — код буквы.
# ✔ Напишите преобразование в одну строку.
# ✔ Возьмите словарь, который вы получили. Сохраните его итераторатор.
# ✔ Далее выведите первые 5 пар ключ-значение, обращаясь к итератору, а не к словарю.

# text = 'Привет 123 Ответ 345'
#
# for_dict = {}
# for key in set(text):
#     for_dict[key] = ord(key)
# print(for_dict)
#
# for_dict = {key: ord(key) for key in set(text)}
# print(for_dict)
#
# my_iter = iter(for_dict.items())
# for _ in range(5): # если переменная i не используется в цикле, то её можно заменить на _
#     print(next(my_iter, None))


# Задание №4
# ✔ Создайте генератор чётных чисел от нуля до 100.
# ✔ Из последовательности исключите
# числа, сумма цифр которых равна 8.
# ✔ Решение в одну строку.

# generator_1 = (i for i in range(0, 101, 2) if i // 10 + i % 10 !=8)
# generator_2 = (i for i in range(0, 101, 2) if sum(map(int, str(i))) !=8)
# generator_3 = filter(lambda x: sum(map(int, str(x)))  !=8, range(0, 101, 2))
# print(list(generator_1))
# print(list(generator_2))
# print(list(generator_3))


# Задание №5
# ✔ Напишите программу, которая выводит на экран числа от 1 до 100.
# ✔ При этом вместо чисел, кратных трем, программа должна выводить слово «Fizz»
# ✔ Вместо чисел, кратных пяти — слово «Buzz».
# ✔ Если число кратно и 3, и 5, то программа должна выводить слово «FizzBuzz».
# ✔ *Превратите решение в генераторное выражение.

# list_1 = []
#
# for num in range(1, 101):
#     if num % 15 == 0:
#         list_1.append('FizzBuzz')
#     elif num % 3 == 0:
#         list_1.append('Fizz')
#     elif num % 5 == 0:
#         list_1.append('Buzz')
#     else:
#         list_1.append(num)
# print(list_1)
#
#
# list_1 = ('FizzBuzz' if num % 15 == 0  else 'Fizz' if  num % 3 == 0 else 'Buzz' if num % 5 == 0 else num for num in range(1, 101))


# Задание №7
# ✔ Создайте функцию-генератор.
# ✔ Функция генерирует N простых чисел, начиная с числа 2.
# ✔ Для проверки числа на простоту используйте правило: «число является простым, если делится
# нацело только на единицу и на себя».

def func(n):
    count = 1
    prime_num = 2
    yield prime_num

    while count < n:
        prime_num += 1
        for div in range(2, prime_num):
            if prime_num % div == 0:
                break
        else:
            count += 1
            yield prime_num

print(*func(11))





